function defaultHumanSoleusModel = createHumanSoleusModel(...
                                      normPevkToActinAttachmentPoint,...
                                      normFiberLengthAtOneNormPassiveForce,...                                      
                                      useCalibratedCurves,...
                                      useTwoSidedTitinCurves,...
                                      smallNumericallyNonZeroNumber,...
                                      flag_enableNumericallyNonZeroGradients,...
                                      scaleOptimalFiberLength,...
                                      scaleMaximumIsometricTension,...
                                      flag_useOctave)


%Potential variables to expose
rigidTendonReferenceModel             = [];
elasticTendonReferenceModel           = [];



% The human soleus model is being used to simulate the titin kinematics observed
% by Trombitas et al. during a passive stretch. As this experiment is no way
% dependent on the architectural properties of the human soleus I have not gone
% to the effort to fit the active and passive properties of the model to data.

humanSoleusActiveForceLengthData  = [];
humanSoleusPassiveForceLengthData = [];

flag_solveForOptimalFiberLengthOfBestFit         = 0; 
shiftLengthActiveForceLengthCurveDescendingCurve = 0.;


%flag_enableNumericallyNonZeroGradients    = 1;
%flag_plotEveryDefaultCurve = 0;
%smallNumericallyNonZeroNumber           = sqrt(sqrt(eps));

%%
% Add the directories needed to run this script
%%
%parametersDirectoryTreeMTParams     = genpath('parameters');
%parametersDirectoryTreeExperiments  = genpath('experiments');
%parametersDirectoryTreeModels       = genpath('models');
%parametersDirectoryTreeCurves       = genpath('curves');
%parametersDirectoryTreeSimulation   = genpath('simulation');

%addpath(parametersDirectoryTreeMTParams);
%addpath(parametersDirectoryTreeExperiments);
%addpath(parametersDirectoryTreeModels);
%addpath(parametersDirectoryTreeCurves);
%addpath(parametersDirectoryTreeSimulation);


[humanSoleusMusculotendonProperties, ...
 humanSoleusSarcomereProperties,...
 humanSoleusActiveForceLengthData,...
 humanSoleusPassiveForceLengthData] = ...
    createHumanSoleusParameters( ...
                        scaleOptimalFiberLength,...
                        scaleMaximumIsometricTension,...
                        normFiberLengthAtOneNormPassiveForce,...
                        normPevkToActinAttachmentPoint,...
                        flag_useOctave);

createMusculoTendonFcn = ...
  @(argScaleFiberLength,argScaleFiso)createHumanSoleus(...
                                        argScaleFiberLength,...
                                        argScaleFiso,...
                                        normFiberLengthAtOneNormPassiveForce,...
                                        normPevkToActinAttachmentPoint,...
                                        flag_useOctave); 
                                        

[humanSoleusNormMuscleCurvesDefault,...
 humanSoleusMusculotendonPropertiesDefault,...
 humanSoleusSarcomerePropertiesDefault,... 
 activeForceLengthCurveAnnotationPoints,...
 humanSoleusActiveForceLengthDataDefault,...
 humanSoleusPassiveForceLengthDataDefault,...
 humanSoleusPassiveForceLengthCurveSettings]= ...
    createFittedMuscleCurves( ...
      humanSoleusMusculotendonProperties,...
      humanSoleusSarcomereProperties,...
      useCalibratedCurves,...
      useTwoSidedTitinCurves,...
      humanSoleusActiveForceLengthData,...
      humanSoleusPassiveForceLengthData,...
      shiftLengthActiveForceLengthCurveDescendingCurve,...
      flag_enableNumericallyNonZeroGradients,...
      smallNumericallyNonZeroNumber,...
      flag_solveForOptimalFiberLengthOfBestFit,...
      createMusculoTendonFcn,...
      flag_useOctave);



defaultHumanSoleusModel = struct('musculotendon',...
                            humanSoleusMusculotendonPropertiesDefault,...
                            'sarcomere',...
                            humanSoleusSarcomerePropertiesDefault,...
                            'falData',...
                            humanSoleusActiveForceLengthDataDefault,...
                            'fpeData',...
                            humanSoleusPassiveForceLengthDataDefault,...
                            'curves',...
                            humanSoleusNormMuscleCurvesDefault);
                      



   

