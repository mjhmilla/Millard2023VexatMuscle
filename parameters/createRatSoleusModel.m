%%
% SPDX-FileCopyrightText: 2023 Matthew Millard <millard.matthew@gmail.com>
%
% SPDX-License-Identifier: MIT
%
%
%%

function defaultRatSoleusFibril = createRatSoleusModel(...
                                      normCrossBridgeStiffness,...
                                      normCrossBridgeDamping,...
                                      normPevkToActinAttachmentPoint,...
                                      normMaxActiveTitinToActinDamping,...
                                      normFiberLengthAtOneNormPassiveForce,...
                                      ecmForceFraction,...
                                      titinMolecularWeightInkD,...
                                      useWLCTitinModel,...                                      
                                      useCalibratedCurves,...
                                      useTwoSidedTitinCurves,...
                                      smallNumericallyNonZeroNumber,...
                                      flag_enableNumericallyNonZeroGradients,...
                                      scaleOptimalFiberLength,...
                                      scaleMaximumIsometricTension,...
                                      useElasticTendon,...
                                      makeFibrilModel,...
                                      projectFolders,...
                                      flag_useOctave)

indexDataSet=1;

activeForceLengthDataTable = [];
passiveForceLengthDataTable = [];

switch indexDataSet
    case 1
        fileActiveForceLength_TRSS2017 = ...
            fullfile(projectFolders.experiments_TRSS2017,...
                     'data','fig_TomalkaRodeSchumacherSiebert2017_Fig2_fl.csv');
        
        filePassiveForceLength_TRSS2017 = ...
            fullfile(projectFolders.experiments_TRSS2017,...
                     'data','fig_TomalkaRodeSchumacherSiebert2017_Fig2_fpe.csv');
        
        activeForceLengthDataTable =...
                loadDigitizedData( ...
                fileActiveForceLength_TRSS2017,...
                'Length (um)','Norm. Force (f/fo)',...
                {'Exp.'},...
                 'Rat fibril (EDL) $$f^{PE}$$');
        
        passiveForceLengthDataTable =...
                loadDigitizedData( ...
                filePassiveForceLength_TRSS2017,...
                'Length (um)','Norm. Force (f/fo)',...
                {'Exp.'},...
                 'Rat fibril (EDL) $$f^{L}$$');        
            
    case 2
        fileActiveForceLength_ZHGL1995 = ...
            fullfile(projectFolders.experiments_ZHGL1995,...
            'data','ZuurbierHeslingaGrootLaarse1995.csv'     );
        
        activeForceLengthDataTable =...
                loadDigitizedData( ...
                fileActiveForceLength_ZHGL1995,...
                'Length (um)','Norm. Force (f/fo)',...
                {'ZHGL1995 Exp: $$\mu$$',...
                 'ZHGL1995 Exp: $$\mu+\sigma$$',...
                 'ZHGL1995 Exp: $$\mu-\sigma$$',...
                 'Model (GM)','Model (EDL)'},...
                 'Rat fibril (GM + EDL) $$f^{L}$$');
    case 3
        fileActiveForceLength_SW1982 = ...
            fullfile(projectFolders.experiments_SW1982,...
            'data','StephensonWilliams1982_Fig7_fl.csv'     );
        
        filePassiveForceLength_SW1982 = ...
            fullfile(projectFolders.experiments_SW1982,...
            'data','StephensonWilliams1982_Fig7_fpe.csv'     );
        
        
        activeForceLengthDataTable =...
                loadDigitizedData(fileActiveForceLength_SW1982,...
                                'Length (um)','Norm. Force (f/fo)',...
                                {'EDL (low temp)','EDL (norm. temp)',...
                                 'SOL (low temp)','SOL (norm. temp)'},...
                                 'Rat fibril (SOL + EDL) $$f^{L}$$');
        
        passiveForceLengthDataTable = ...
            loadDigitizedData(filePassiveForceLength_SW1982,...
                                'Length (um)','Norm. Force (f/fo)',...
                                {'EDL and SOL'},...
                                'Rat fibril (SOL + EDL) $$f^{PE}$$');
    otherwise 
        assert(0,'Error: non existant fitting data set');

end

activeForceLengthData = [];
passiveForceLengthData = [];

for i=1:1:length(activeForceLengthDataTable)
    activeForceLengthData = ...
        [activeForceLengthData;...
         activeForceLengthDataTable(i).x, ...
         activeForceLengthDataTable(i).y];
end
for i=1:1:length(passiveForceLengthDataTable)
    passiveForceLengthData = ...
        [passiveForceLengthData;...
         passiveForceLengthDataTable(i).x, ...
         passiveForceLengthDataTable(i).y];            
end


if( smallNumericallyNonZeroNumber <= 0 &&...
    flag_enableNumericallyNonZeroGradients  )
  disp('Warning: flag_enableNumericallyNonZeroGradients is set to 1 and');
  disp('         smallNumericallyNonZeroNumber <= 0');
  disp('Setting smallNumericallyNonZeroNumber to be sqrt(sqrt(eps))');
  smallNumericallyNonZeroNumber = sqrt(sqrt(eps));
end

if(isempty(normPevkToActinAttachmentPoint))
  normPevkToActinAttachmentPoint        = 0.5;

  disp('normPevkToActinAttachmentPoint empty using default:');  
  fprintf('\t%f\n',normPevkToActinAttachmentPoint);
end

if(isempty(normFiberLengthAtOneNormPassiveForce))
  normFiberLengthAtOneNormPassiveForce        = 1.696;

  disp('normFiberLengthAtOneNormPassiveForce empty using default');
  fprintf('\t%f\n',normFiberLengthAtOneNormPassiveForce);
end



[ratSoleusFibrilMusculotendonProperties, ...
 ratSoleusFibrilSarcomereProperties,...
 activeForceLengthDataNormalized,...
 passiveForceLengthDataNormalized] = ...
    createRatSoleusParameters(  ...                       
                        scaleOptimalFiberLength,...
                        scaleMaximumIsometricTension,...
                        activeForceLengthData,...
                        passiveForceLengthData,...                           
                        normFiberLengthAtOneNormPassiveForce,...
                        normPevkToActinAttachmentPoint,...
                        normMaxActiveTitinToActinDamping,...
                        ecmForceFraction,...
                        titinMolecularWeightInkD,...
                        makeFibrilModel,...
                        projectFolders,...
                        flag_useOctave);

ratSoleusFibrilSarcomereProperties.normCrossBridgeStiffness ...
                                    =normCrossBridgeStiffness;

ratSoleusFibrilSarcomereProperties.normCrossBridgeDamping ...
                                    =normCrossBridgeDamping;
%
% This fitting function will not function correctly if the model is fit
% to data
%
createMusculoTendonFcn = ...
 @(argScaleFiberLength,argScaleFiso)createRatSoleusParameters(...
                        argScaleFiberLength,...
                        argScaleFiso,...
                        activeForceLengthData,...
                        passiveForceLengthData,...                                         
                        normFiberLengthAtOneNormPassiveForce,...
                        normPevkToActinAttachmentPoint,...
                        normMaxActiveTitinToActinDamping,...
                        ecmForceFraction,...
                        titinMolecularWeightInkD,...
                        makeFibrilModel,...
                        projectFolders,...
                        flag_useOctave); 
                                        
%flag_solveForOptimalFiberLengthOfBestFit         = 0; 
%shiftLengthActiveForceLengthCurveDescendingCurve = 0.;

%useElasticTendon = 0;
%elasticTendonReferenceModel = [];

shiftLengthActiveForceLengthCurveDescendingCurve = 0;
flag_solveForOptimalFiberLengthOfBestFit = 0;
elasticTendonReferenceModel = [];

[ratSoleusFibrilNormMuscleCurvesDefault,...
ratSoleusFibrilMusculotendonPropertiesDefault,...
ratSoleusFibrilSarcomerePropertiesDefault,... 
activeForceLengthCurveAnnotationPoints,...
ratSoleusFibrilActiveForceLengthDataDefault,...
ratSoleusFibrilPassiveForceLengthDataDefault,...
ratSoleusFibrilPassiveForceLengthCurveSettings]= ...
   createFittedMuscleCurves( ...
     ratSoleusFibrilMusculotendonProperties,...
     ratSoleusFibrilSarcomereProperties,...
     useWLCTitinModel,...      
     useCalibratedCurves,...
     useTwoSidedTitinCurves,...
     activeForceLengthDataNormalized,...
     passiveForceLengthDataNormalized,...
     shiftLengthActiveForceLengthCurveDescendingCurve,...
     flag_enableNumericallyNonZeroGradients,...
     smallNumericallyNonZeroNumber,...
     flag_solveForOptimalFiberLengthOfBestFit,...
     createMusculoTendonFcn,...
     useElasticTendon,...
     elasticTendonReferenceModel,...      
     flag_useOctave);


% Some muscles appear to have a minimum length for developing linear
% eccentric force profiles, others not. Here we set the default to 
% be the start of the passive-force-length curve and adjust as needed
%
%Tomalka A. Eccentric muscle contractions: from single muscle fibre to 
%whole muscle mechanics. PflÃ¼gers Archiv-European Journal of Physiology. 
%2023 Apr;475(4):421-35.

%ratSoleusFibrilSarcomerePropertiesDefault.normLengthTitinActinBondMinimum = ...
%  ratSoleusFibrilNormMuscleCurvesDefault.fiberForceLengthCurve.xEnd(1,1);

defaultRatSoleusFibril = struct('musculotendon',...
                           ratSoleusFibrilMusculotendonPropertiesDefault,...
                           'sarcomere',...
                           ratSoleusFibrilSarcomerePropertiesDefault,...
                           'falData',...
                           ratSoleusFibrilActiveForceLengthDataDefault,...
                           'fpeData',...
                           ratSoleusFibrilPassiveForceLengthDataDefault,...
                           'curves',...
                           ratSoleusFibrilNormMuscleCurvesDefault,...
                           'fitting',...
                           []);
              


   
