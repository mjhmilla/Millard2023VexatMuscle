%%
% SPDX-FileCopyrightText: 2023 Matthew Millard <millard.matthew@gmail.com>
%
% SPDX-License-Identifier: MIT
%
% If you use this code in your work please cite the pre-print of this paper
% or the most recent peer-reviewed version of this paper:
%
%    Matthew Millard, David W. Franklin, Walter Herzog. 
%    A three filament mechanistic model of musculotendon force and impedance. 
%    bioRxiv 2023.03.27.534347; doi: https://doi.org/10.1101/2023.03.27.534347 
%
%%

function defaultRabbitPsoasFibril = createRabbitPsoasFibrilModel(...
                                      normCrossBridgeStiffness,...
                                      normCrossBridgeDamping,...
                                      normPevkToActinAttachmentPoint,...
                                      normMaxActiveTitinToActinDamping,...
                                      normFiberLengthAtOneNormPassiveForce,...
                                      ecmForceFraction,...
                                      titinMolecularWeightInkD,...
                                      useWLCTitinModel,...                                      
                                      useCalibratedCurves,...
                                      useTwoSidedTitinCurves,...
                                      smallNumericallyNonZeroNumber,...
                                      flag_enableNumericallyNonZeroGradients,...
                                      scaleOptimalFiberLength,...
                                      scaleMaximumIsometricTension,...
                                      projectFolders,...
                                      flag_useOctave)

% The human soleus model is being used to simulate the titin kinematics observed
% by Trombitas et al. during a passive stretch. As this experiment is no way
% dependent on the architectural properties of the human soleus I have not gone
% to the effort to fit the active and passive properties of the model to data.
rabbitPsoasFibrilActiveForceLengthData  = [];
rabbitPsoasFibrilPassiveForceLengthData = [];


% Check the arguments
if( smallNumericallyNonZeroNumber <= 0 &&...
    flag_enableNumericallyNonZeroGradients  )
  disp('Warning: flag_enableNumericallyNonZeroGradients is set to 1 and');
  disp('         smallNumericallyNonZeroNumber <= 0');
  disp('Setting smallNumericallyNonZeroNumber to be sqrt(sqrt(eps))');
  smallNumericallyNonZeroNumber = sqrt(sqrt(eps));
end

if(isempty(normPevkToActinAttachmentPoint))
  normPevkToActinAttachmentPoint        = 0.5;

  disp('normPevkToActinAttachmentPoint empty using default:');  
  fprintf('\t%f\n',normPevkToActinAttachmentPoint);
end

if(isempty(normFiberLengthAtOneNormPassiveForce))
  normFiberLengthAtOneNormPassiveForce        = 1.367732948060934e+00;

  disp('normFiberLengthAtOneNormPassiveForce empty using default');
  fprintf('\t%f\n',normFiberLengthAtOneNormPassiveForce);
end



[rabbitPsoasFibrilMusculotendonProperties, ...
 rabbitPsoasFibrilSarcomereProperties] = ...
    createRabbitPsoasFibrilParameters(  ...
                        scaleOptimalFiberLength,...
                        scaleMaximumIsometricTension,...
                        normFiberLengthAtOneNormPassiveForce,...
                        normPevkToActinAttachmentPoint,...
                        normMaxActiveTitinToActinDamping,...
                        ecmForceFraction,...
                        titinMolecularWeightInkD,...
                        projectFolders,...
                        flag_useOctave);

rabbitPsoasFibrilSarcomereProperties.normCrossBridgeStiffness ...
                                    =normCrossBridgeStiffness;

rabbitPsoasFibrilSarcomereProperties.normCrossBridgeDamping ...
                                    =normCrossBridgeDamping;

createMusculoTendonFcn = ...
  @(argScaleFiberLength,argScaleFiso)createRabbitPsoasFibrilParameters(...
                                        argScaleFiberLength,...
                                        argScaleFiso,...
                                        normFiberLengthAtOneNormPassiveForce,...
                                        normPevkToActinAttachmentPoint,...
                                        normMaxActiveTitinToActinDamping,...
                                        ecmForceFraction,...
                                        projectFolders,...
                                        flag_useOctave); 
                                        


%We have no data to fit to, and so these options cannot be used
flag_solveForOptimalFiberLengthOfBestFit         = 0; 
shiftLengthActiveForceLengthCurveDescendingCurve = 0.;

useElasticTendon = 0;
elasticTendonReferenceModel = [];

useTitinModel2025 = 0;

[rabbitPsoasFibrilNormMuscleCurvesDefault,...
 rabbitPsoasFibrilMusculotendonPropertiesDefault,...
 rabbitPsoasFibrilSarcomerePropertiesDefault,... 
 activeForceLengthCurveAnnotationPoints,...
 rabbitPsoasFibrilActiveForceLengthDataDefault,...
 rabbitPsoasFibrilPassiveForceLengthDataDefault,...
 rabbitPsoasFibrilPassiveForceLengthCurveSettings]= ...
    createFittedMuscleCurves( ...
      rabbitPsoasFibrilMusculotendonProperties,...
      rabbitPsoasFibrilSarcomereProperties,...
      useWLCTitinModel,...      
      useCalibratedCurves,...
      useTwoSidedTitinCurves,...
      useTitinModel2025,...
      rabbitPsoasFibrilActiveForceLengthData,...
      rabbitPsoasFibrilPassiveForceLengthData,...
      shiftLengthActiveForceLengthCurveDescendingCurve,...
      flag_enableNumericallyNonZeroGradients,...
      smallNumericallyNonZeroNumber,...
      flag_solveForOptimalFiberLengthOfBestFit,...
      createMusculoTendonFcn,...
      useElasticTendon,...
      elasticTendonReferenceModel,...   
      projectFolders,...   
      flag_useOctave);


% Some muscles appear to have a minimum length for developing linear
% eccentric force profiles, others not. Here we set the default to 
% be the start of the passive-force-length curve and adjust as needed
%
%Tomalka A. Eccentric muscle contractions: from single muscle fibre to 
%whole muscle mechanics. PflÃ¼gers Archiv-European Journal of Physiology. 
%2023 Apr;475(4):421-35.

rabbitPsoasFibrilSarcomerePropertiesDefault.normLengthTitinActinBondMinimum = ...
  rabbitPsoasFibrilNormMuscleCurvesDefault.fiberForceLengthCurve.xEnd(1,1);


defaultRabbitPsoasFibril = struct('musculotendon',...
                            rabbitPsoasFibrilMusculotendonPropertiesDefault,...
                            'sarcomere',...
                            rabbitPsoasFibrilSarcomerePropertiesDefault,...
                            'falData',...
                            rabbitPsoasFibrilActiveForceLengthDataDefault,...
                            'fpeData',...
                            rabbitPsoasFibrilPassiveForceLengthDataDefault,...
                            'curves',...
                            rabbitPsoasFibrilNormMuscleCurvesDefault,...
                            'fitting',...
                            []);
              


   
