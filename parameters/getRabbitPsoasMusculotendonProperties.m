function [musculotendonProperties] = getRabbitPsoasMusculotendonProperties(...
                          maximumNormalizedFiberVelocity,...
                          forceVelocityMultiplierAtHalfMaximumFiberVelocity,...
                          tendonStrainAtOneNormForce,...
                          scaleOptimalFiberLength,...                                          
                          fisoScale,...
                          normPlateauOffset,...
                          useElasticTendon,...
                          flag_useOctave)                        


%Putting in placeholder values here: normalized values will be reported
%from the fibril experiments, so these numerical values are not important.
%I'm going to make these place holder values ridiculously mismatched with
%any reasonable value so that anyone using this script knows that something
%is amiss.
%

disp('getRabbitPsoasMusculotendonProperties:');
disp('  Using place holder values for the architectural properties');
disp('  for two reasons: first, I cannot find any published architectural');
disp('  values for the rabbit psoas; second, the rabbit psoas model is ');
disp('  evaluated in a normalized space so the values of its architectural');
disp('  properties are not important.');

lceOpt   = 0.1*scaleOptimalFiberLength;
alphaOpt = 0; 
fiso     = 1;


ltSlk = 0.01; 

%Set the elasticity of the tendon as desired
etIso = tendonStrainAtOneNormForce;
normTendonLength = 1+etIso;
if(useElasticTendon==0)
  etIso = 0;
  normTendonLength = 1;
end


minimumFiberLengthAlongTendon = sqrt(eps);

lcePerp    = lceOpt*sin(alphaOpt);
lceAT      = minimumFiberLengthAlongTendon;

alphaMax        = atan2(lcePerp, ...
                       lceAT);
minimumFiberLength = sqrt(lcePerp*lcePerp + lceAT*lceAT);

dlceMaxN=maximumNormalizedFiberVelocity;

musculotendonProperties = struct(...
        'name'                              , 'Rabbit Psoas',  ... 
        'abbr'                              , 'rPsoas',     ...
        'fiso'                              , fiso,         ...  
        'optimalFiberLength'                , lceOpt,       ... 
        'pennationAngle'                    , alphaOpt,     ... 
        'pennationAngleAtMinimumFiberLength', alphaMax,...
        'tendonSlackLength'                 , ltSlk,        ...  
        'tendonStrainAtOneNormForce'        , etIso,        ...
        'normTendonDampingLinear'           , 0.0565,          ...
        'normTendonDampingConstant'         , 0.0,           ...
        'normNumericalDamping'              , 1e-4,         ...
        'minimumFiberLength'                , minimumFiberLength,    ...
        'minimumFiberLengthAlongTendon'     , minimumFiberLengthAlongTendon, ...
        'normPassiveForceLengthCurveStiffnessAtSlack', 0.001,...
        'maximumNormalizedFiberVelocity',     maximumNormalizedFiberVelocity,...
        'forceVelocityMultiplierAtHalfMaximumFiberVelocity',...
          forceVelocityMultiplierAtHalfMaximumFiberVelocity,...
        'forceVelocityMultiplierAtLowEccentricFiberVelocity',...
        1.30,... %1.15
        'forceVelocityMultiplierAtMaximumEccentricFiberVelocity',...
        1.45,... %1.30
        'appliedFiberLengthScaling', scaleOptimalFiberLength,...
        'appliedMaxIsometricForceScaling', fisoScale);


