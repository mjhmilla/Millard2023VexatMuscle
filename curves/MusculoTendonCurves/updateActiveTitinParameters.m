function [sarcomerePropertiesOpus31Upd, normMuscleCurvesUpd] = ...
    updateActiveTitinParameters(musculotendonPropertiesOpus31, ...
                             sarcomerePropertiesOpus31,...
                             normMuscleCurves,...
                             passiveCurveSettings,...
                             expConfigHerzogLeonard2002,...
                             flag_useElasticTendon,...
                             dataFolder,...
                             flag_fitActiveTitinProperties,...
                             flag_useOctave)

disp('fitActiveTitinParameters');
flag_computeCurveIntegrals=0;


sarcomerePropertiesOpus31Upd = sarcomerePropertiesOpus31;
normMuscleCurvesUpd = normMuscleCurves;

%% Updated active titin parameters
%normPevkToActinAttachmentPoint      = 0.5;
%normMaxActiveTitinToActinDamping    = 20;

biParam = [sarcomerePropertiesOpus31Upd.normPevkToActinAttachmentPoint;...
           sarcomerePropertiesOpus31Upd.normMaxActiveTitinToActinDamping];
biNorm  = [1;1];
biDelta = biParam.*0.5;

%param0 = [1;1];
%paramNorm =  [normPevkToActinAttachmentPoint;...
%              normMaxActiveTitinToActinDamping];

errorStart=1;
errorEnd = 1;
errorSumSqNorm = 1;

if(flag_fitActiveTitinProperties==1)
    flag_plot=0;
    typeCostFunction = 2;
    
    errorStart = calcActiveTitinParameterError(...
                            biParam,...
                            biNorm, ...
                            errorSumSqNorm,...
                            typeCostFunction,...
                            musculotendonPropertiesOpus31, ...
                            sarcomerePropertiesOpus31Upd,...
                            normMuscleCurvesUpd,...
                            passiveCurveSettings,...
                            expConfigHerzogLeonard2002,...
                            flag_useElasticTendon,...
                            dataFolder,...
                            1,...
                            flag_useOctave);
    
    
    idxParam = 1;
    
    
    for idxParam=1:1:2
    
        typeCostFunction = idxParam-1;
        error0 = calcActiveTitinParameterError(...
                            biParam,...
                            biNorm, ...                        
                            errorSumSqNorm,...
                            typeCostFunction,...
                            musculotendonPropertiesOpus31, ...
                            sarcomerePropertiesOpus31Upd,...
                            normMuscleCurvesUpd,...
                            passiveCurveSettings,...
                            expConfigHerzogLeonard2002,...
                            flag_useElasticTendon,...
                            dataFolder,...
                            flag_plot,...
                            flag_useOctave);    
        errBest = error0;
    
        fprintf('%1.2e\tStarting error, param %i\n',error0,idxParam);
    
        errorFcn = @(arg)calcActiveTitinParameterError(...
                            arg,...
                            biNorm, ...
                            errorSumSqNorm,...
                            typeCostFunction,...
                            musculotendonPropertiesOpus31, ...
                            sarcomerePropertiesOpus31Upd,...
                            normMuscleCurvesUpd,...
                            passiveCurveSettings,...
                            expConfigHerzogLeonard2002,...
                            flag_useElasticTendon,...
                            dataFolder,...                        
                            flag_plot,...
                            flag_useOctave);
    
        %Will get us within 1% of the best parameter value, as these parameters
        %are relatively independent
        for idxBisection=1:1:12
            biParamL = biParam;
            biParamL(idxParam,1) = biParamL(idxParam,1) - biDelta(idxParam,1); 
            errL = errorFcn(biParamL);
        
            biParamR = biParam;
            biParamR(idxParam,1) = biParamR(idxParam,1) + biDelta(idxParam,1); 
            errR = errorFcn(biParamR);
        
            if(errL < errR && errL < errBest )
                biParam = biParamL;
                errBest=errL;
            end
            if(errR < errL && errR < errBest )
                biParam = biParamR;
                errBest=errR;
            end
            biDelta(idxParam,1) = biDelta(idxParam,1)*0.5;
            fprintf('  %i\t%1.2e\n',idxBisection,errBest);
        end
        
        fprintf('%1.2e\tEnding error, param %i\n',errBest,idxParam);
        
    
    end
    
    
    % lb = [0.05;5]./paramNorm;
    % ub = [0.95;100]./paramNorm;
    % 
    % fprintf('  Starting Error: %1.2e\n',1);
    % options = optimoptions('fmincon','Display','iter',...
    %                        'MaxFunctionEvaluations',60);
    % 
    % [x,fval,exitflag]=fmincon(errorFcn,param0,[],[],[],[],lb,ub,[],options);
    % fprintf('  Ending Error  : %1.2e\n',fval);
    
end
    
    
    typeCostFunction = 2;
    
    errorEnd = calcActiveTitinParameterError(...
                            biParam,...
                            biNorm, ...
                            errorSumSqNorm,...
                            typeCostFunction,...
                            musculotendonPropertiesOpus31, ...
                            sarcomerePropertiesOpus31Upd,...
                            normMuscleCurvesUpd,...
                            passiveCurveSettings,...
                            expConfigHerzogLeonard2002,...
                            flag_useElasticTendon,...
                            dataFolder,...
                            1,...
                            flag_useOctave);

if( (errorEnd < errorStart && flag_fitActiveTitinProperties) ...
        || flag_fitActiveTitinProperties == 0)
    fprintf('  updating sarcomere and curve structures\n');
    
    normPevkToActinAttachmentPoint      = biParam(1,1)*biNorm(1,1);
    normMaxActiveTitinToActinDamping    = biParam(2,1)*biNorm(2,1);
    
    fprintf('\t%e\t%s\n',normPevkToActinAttachmentPoint,... 
                        'normPevkToActinAttachmentPoint');
    fprintf('\t%e\t%s\n',normMaxActiveTitinToActinDamping,... 
                        'normMaxActiveTitinToActinDamping');

    sarcomerePropertiesOpus31Upd.normPevkToActinAttachmentPoint = ...
        normPevkToActinAttachmentPoint;
    sarcomerePropertiesOpus31Upd.normMaxActiveTitinToActinDamping = ...
        normMaxActiveTitinToActinDamping;
    
    
    %% After an optimal value has been found, update all titin curves
    flag_useElasticIgD        = 1;
    flag_useHumanIgDGeometry  = 0;
    flag_createTwoSidedCurves = 0;
    
    [normMuscleCurvesUpd.forceLengthProximalTitinCurve,...
     normMuscleCurvesUpd.forceLengthProximalTitinInverseCurve,...
     normMuscleCurvesUpd.forceLengthDistalTitinCurve,...
     normMuscleCurvesUpd.forceLengthDistalTitinInverseCurve] ...
              = createTitinCurves2022( normMuscleCurvesUpd.fiberForceLengthCurve,...
                                       passiveCurveSettings,...
                                       normMuscleCurvesUpd.forceLengthECMHalfCurve,...
                                       sarcomerePropertiesOpus31Upd,...
                                       musculotendonPropertiesOpus31.name,...
                                       flag_createTwoSidedCurves,...
                                       flag_computeCurveIntegrals,...
                                       flag_useElasticIgD,...
                                       flag_useHumanIgDGeometry,...
                                       flag_useOctave); 
    flag_useElasticIgD        = 1;
    flag_useHumanIgDGeometry  = 1;
    flag_createTwoSidedCurves = 0;
    
    [normMuscleCurvesUpd.forceLengthProximalTitinCurveHuman,...
     normMuscleCurvesUpd.forceLengthProximalTitinInverseCurveHuman,...
     normMuscleCurvesUpd.forceLengthDistalTitinCurveHuman,...
     normMuscleCurvesUpd.forceLengthDistalTitinInverseCurveHuman] ...
              = createTitinCurves2022( normMuscleCurvesUpd.fiberForceLengthCurve,...
                                       passiveCurveSettings,...
                                       normMuscleCurvesUpd.forceLengthECMHalfCurve,...
                                       sarcomerePropertiesOpus31Upd,...
                                       musculotendonPropertiesOpus31.name,...
                                       flag_createTwoSidedCurves,...
                                       flag_computeCurveIntegrals,...
                                       flag_useElasticIgD,...
                                       flag_useHumanIgDGeometry,...
                                       flag_useOctave); 
    
    flag_useElasticIgD        = 1;
    flag_useHumanIgDGeometry  = 0;
    flag_createTwoSidedCurves = 1;
    
    [normMuscleCurvesUpd.forceLengthProximalTitinTwoSidedCurve,...
     normMuscleCurvesUpd.forceLengthProximalTitinInverseTwoSidedCurve,...
     normMuscleCurvesUpd.forceLengthDistalTitinTwoSidedCurve,...
     normMuscleCurvesUpd.forceLengthDistalTitinInverseTwoSidedCurve] ...
              = createTitinCurves2022( normMuscleCurvesUpd.fiberForceLengthCurve,...
                                       passiveCurveSettings,...
                                       normMuscleCurvesUpd.forceLengthECMHalfCurve,...
                                       sarcomerePropertiesOpus31Upd,...
                                       musculotendonPropertiesOpus31.name,...
                                       flag_createTwoSidedCurves,...
                                       flag_computeCurveIntegrals,...
                                       flag_useElasticIgD,...
                                       flag_useHumanIgDGeometry,...
                                       flag_useOctave); 
    flag_useElasticIgD        = 1;
    flag_useHumanIgDGeometry  = 1;
    flag_createTwoSidedCurves = 1;
    
    [normMuscleCurvesUpd.forceLengthProximalTitinCurveTwoSidedHuman,...
     normMuscleCurvesUpd.forceLengthProximalTitinInverseCurveTwoSidedHuman,...
     normMuscleCurvesUpd.forceLengthDistalTitinCurveTwoSidedHuman,...
     normMuscleCurvesUpd.forceLengthDistalTitinInverseCurveTwoSidedHuman] ...
              = createTitinCurves2022( normMuscleCurvesUpd.fiberForceLengthCurve,...
                                       passiveCurveSettings,...
                                       normMuscleCurvesUpd.forceLengthECMHalfCurve,...
                                       sarcomerePropertiesOpus31Upd,...
                                       musculotendonPropertiesOpus31.name,...
                                       flag_createTwoSidedCurves,...
                                       flag_computeCurveIntegrals,...
                                       flag_useElasticIgD,...
                                       flag_useHumanIgDGeometry,...
                                       flag_useOctave);  
    here=1;

else
  fprintf('  NOT updating sarcomere and curve structures: no improvement\n');
end